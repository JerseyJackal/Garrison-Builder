<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">var toolSpr;

switch (currentTool)
{
    case "redspawn":
      toolSpr = redspawn_ent;
    break;
    case "bluespawn":
      toolSpr = bluespawn_ent;
    break;
    case "redintel":
      toolSpr = redintel_ent;
    break;
    case "blueintel":
      toolSpr = blueintel_ent;
    break;
    case "redteamgate":
      toolSpr = redteamgate_ent;
    break;
    case "redteamgate2":
      toolSpr = redteamgate2_ent;
    break;
    case "blueteamgate":
      toolSpr = blueteamgate_ent;
    break;
    case "blueteamgate2":
      toolSpr = blueteamgate2_ent;
    break;
    case "redintelgate":
      toolSpr = redintelgate_ent;
    break;
    case "redintelgate2":
      toolSpr = redintelgate2_ent;
    break;
    case "blueintelgate":
      toolSpr = blueintelgate_ent;
    break;
    case "blueintelgate2":
      toolSpr = blueintelgate2_ent;
    break;
    case "intelgatehorizontal":
      toolSpr = intelgatehorizontal_ent;
    break;
    case "intelgatevertical":
      toolSpr = intelgatevertical_ent;
    break;
    case "killbox":
      toolSpr = killbox_ent;
    break;
    case "spawnroom":
      toolSpr = spawnroom_ent;
    break;
    case "medCabinet":
      toolSpr = medCabinet_ent;
    break;
    case "map_end_trigger_red":
      toolSpr = map_end_trigger_red_ent;
    break;    
    case "map_end_trigger_blu":
      toolSpr = map_end_trigger_blu_ent;
    break;    
    case "map_end_trigger_red_back":
      toolSpr = map_end_trigger_red_back_ent;
    break;    
    case "map_end_trigger_blu_back":
      toolSpr = map_end_trigger_blu_back_ent;
    break; 
    case "fragbox":
      toolSpr = fragbox_ent;
    break;       
    case "playerwall":
      toolSpr = playerwall_ent;
    break;   
    case "playerwall_horizontal":
      toolSpr = playerwall_horizontal_ent;
    break;           
    case "bulletwall":
      toolSpr = bulletwall_ent;
    break;   
    case "bulletwall_horizontal":
      toolSpr = bulletwall_horizontal_ent;
    break;     
    case "teleport_1_point_1":
      toolSpr = teleport_1_point_1_ent;
    break;   
    case "teleport_1_point_2":
      toolSpr = teleport_1_point_2_ent;
    break;   
    case "teleport_2_point_1":
      toolSpr = teleport_2_point_1_ent;
    break;   
    case "teleport_2_point_2":
      toolSpr = teleport_2_point_2_ent;
    break; 
    case "teleport_3_point_1":
      toolSpr = teleport_3_point_1_ent;
    break;   
    case "teleport_3_point_2":
      toolSpr = teleport_3_point_2_ent;
    break; 
    case "teleport_4_point_1":
      toolSpr = teleport_4_point_1_ent;
    break;   
    case "teleport_4_point_2":
      toolSpr = teleport_4_point_2_ent;
    break; 
    case "teleport_5_point_1":
      toolSpr = teleport_5_point_1_ent;
    break;   
    case "teleport_5_point_2":
      toolSpr = teleport_5_point_2_ent;
    break; 
    case "teleport_6_point_1":
      toolSpr = teleport_6_point_1_ent;
    break;   
    case "teleport_6_point_2":
      toolSpr = teleport_6_point_2_ent;
    break; 
    case "teleport_7_point_1":
      toolSpr = teleport_7_point_1_ent;
    break;   
    case "teleport_7_point_2":
      toolSpr = teleport_7_point_2_ent;
    break; 
    case "teleport_8_point_1":
      toolSpr = teleport_8_point_1_ent;
    break;   
    case "teleport_8_point_2":
      toolSpr = teleport_8_point_2_ent;
    break; 
    case "teleport_9_point_1":
      toolSpr = teleport_9_point_1_ent;
    break;   
    case "teleport_9_point_2":
      toolSpr = teleport_9_point_2_ent;
    break; 
    case "teleport_10_point_1":
      toolSpr = teleport_10_point_1_ent;
    break;   
    case "teleport_10_point_2":
      toolSpr = teleport_10_point_2_ent;
    break;                     
    case "gameMode_ctf":
      toolSpr = gameMode_ctf_ent;
    break;        
    case "gameMode_vip":
      toolSpr = gameMode_vip_ent;
    break;                         
    case "vip_start":
      toolSpr = vip_start_ent;
    break;    
    case "vip_end":
      toolSpr = vip_end_ent;
    break;         
    case "NeutralIntel":
      toolSpr = NeutralIntel_ent;
    break;      
    case "IntelSpawn":
      toolSpr = IntelSpawn_ent;
    break;    
    case "BlueIntelSpawn":
      toolSpr = BlueIntelSpawn_ent;
    break;     
    case "RedIntelSpawn":
      toolSpr = RedIntelSpawn_ent;
    break;    
    case "controlPoint1":
      toolSpr = controlPoint1_ent;
    break; 
    case "controlPoint2":
      toolSpr = controlPoint2_ent;
    break; 
    case "controlPoint3":
      toolSpr = controlPoint3_ent;
    break; 
    case "controlPoint4":
      toolSpr = controlPoint4_ent;
    break; 
    case "controlPoint5":
      toolSpr = controlPoint5_ent;
    break; 
    case "NextAreaO":
      toolSpr = NextAreaO_ent;
    break; 
    case "PreviousAreaO":
      toolSpr = PreviousAreaO_ent;
    break; 
    case "SetupGate":
      toolSpr = SetupGate_ent;
    break;  
    case "CapturePoint":
      toolSpr = CapturePoint_ent;
    break;    
    case "moveTool": 
      toolSpr = -2;
    break;    
    default:
      toolSpr = -1;    
    break;
}

if (toolSpr &gt; 0 &amp;&amp; global.notOnTools)
{
 window_set_cursor(cr_none); // because an arrow above your entity isn't very clear.
 draw_sprite_ext(toolSpr, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 0.45);
 // global.notOnTools = true;
}
else
{
 window_set_cursor(cr_default); // the mouse cursor is displayed when we aren't placing entities.
}
/*
else if (toolSpr == -2)
{
 cursor_sprite = dragCur; // let's show the "drag" cursor when the current tool is the entity mover.
}
*/
</argument>
      </arguments>
    </action>
  </actions>
</event>
